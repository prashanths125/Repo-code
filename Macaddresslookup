#!/bin/bash


update() {
	echo "Updating database."

	# Read oui.txt file from URL to a buffer
	BUFFER=$(curl -s standards-oui.ieee.org/oui.txt)

	if [[ $BUFFER == OUI/MA-L* ]]; then
		# Create a db directory if it doesn't exist
		mkdir db > /dev/null 2>&1

		# Filter only base 16 formated and then save it to oui-base16.txt
		echo "$BUFFER" | grep "base 16" | \sed 's/     (base 16)\t\t/|/g' > db/oui-base16.txt
		echo "Done."
	else
		echo "Failed. Please check your internet connection."
	fi
}

lookup() {
	# check database exists
	if [ ! -f db/oui-base16.txt ]; then
		read -p 'No database exists!, Do you want to update now? (y/n) ' user_input

		if [[ ${user_input,,} == "y" || ${user_input,,} == "yes" ]]; then
			update
		else
			exit 2
		fi
	fi

	OUI24=$(echo "$1" | sed 's/[ :-]//g' | cut -b1-6 | awk '{ print toupper($0) }')
	OUTPUT=$(cat db/oui-base16.txt | grep "$OUI24")

	if [[ -z "${OUTPUT// }" ]] ; then
		echo "Could not find this MAC Address Vendor, It's not found in the database.";
	else
		echo "$OUTPUT"
	fi
}

print_usage() {
	echo "Lookup MAC Address"
	echo "  \$ $0 <mac_addr>"
	echo "    <mac_addr> acceptable format => 98:e7:43:48:56:1b or 98-e7-43-48-56-1b or 98e74348561b"
	echo ""
	echo "Update OUI database"
	echo "  \$ $0 update"
}

# requires at lease 1 parameter
if [[ $# -lt 1 ]]; then
	print_usage
	exit 1
fi

# check parameter is update command or mac_addr for lookup
if [[ $1 == "update" ]]; then
	update
else
	# check mac address format before lookup
	regexp_mac="^(([a-fA-F0-9]{2,2})[:-]?){6,6}\$"
	if [[ $1 =~ $regexp_mac ]]; then
		lookup $1
	else
		echo -e "Invalid MAC Address Format\n"
		print_usage
	fi
fi

